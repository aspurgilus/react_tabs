{"version":3,"sources":["Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","memo","tabs","selectedTabId","onSelect","className","map","tab","classNames","id","type","onClick","selectTab","title","content","App","useState","selectedTab","setSelected","onTabSelected","useCallback","ReactDOM","render","document","getElementById"],"mappings":"sMASaA,EAAwBC,gBAAK,YAAwC,IAArCC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,cAAeC,EAAe,EAAfA,SAOhE,OACE,mCACE,qBAAKC,UAAU,OAAf,SACE,6BACGH,EAAKI,KAAI,SAAAC,GAAG,OACX,6BAGE,wBACEF,UAAWG,IAAW,SAAU,CAAE,UAAWL,IAAkBI,EAAIE,KACnEC,KAAK,SACLC,QAAS,kBAjBL,SAACJ,GACbA,EAAIE,KAAON,GACbC,EAASG,GAegBK,CAAUL,IAH3B,SAKGA,EAAIM,SAPFN,EAAIE,gBCXjBP,EAAc,CAClB,CAAEO,GAAI,QAASI,MAAO,QAASC,QAAS,eACxC,CAAEL,GAAI,QAASI,MAAO,QAASC,QAAS,eACxC,CAAEL,GAAI,QAASI,MAAO,QAASC,QAAS,gBAyB3BC,EAtBO,WACpB,MAAmCC,mBAASd,EAAK,IAAjD,mBAAOe,EAAP,KAAoBC,EAApB,KAEMC,EAAgBC,uBAAY,SAACb,GACjCW,EAAYX,KACX,IAEH,OACE,sBAAKF,UAAU,MAAf,UACE,uDAAwBY,EAAYJ,SACpC,cAACb,EAAD,CACEE,KAAMA,EACNC,cAAec,EAAYR,GAC3BL,SAAUe,IAEZ,8BACGF,EAAYH,c,MC7BrBO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.2029d279.chunk.js","sourcesContent":["import React, { memo } from 'react';\nimport classNames from 'classnames';\n\ninterface Props {\n  tabs: Tab[],\n  selectedTabId: string,\n  onSelect: (tab: Tab) => void,\n}\n\nexport const Tabs: React.FC<Props> = memo(({ tabs, selectedTabId, onSelect }) => {\n  const selectTab = (tab: Tab) => {\n    if (tab.id !== selectedTabId) {\n      onSelect(tab);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"tabs\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              key={tab.id}\n            >\n              <button\n                className={classNames('button', { 'is-info': selectedTabId === tab.id })}\n                type=\"button\"\n                onClick={() => selectTab(tab)}\n              >\n                {tab.title}\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </>\n  );\n});\n","import React, { useCallback, useState } from 'react';\n\nimport './App.scss';\nimport { Tabs } from './Tabs';\n\ninterface Tab {\n  id: string,\n  title: string,\n  content: string\n}\n\nconst tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nconst App: React.FC = () => {\n  const [selectedTab, setSelected] = useState(tabs[0]);\n\n  const onTabSelected = useCallback((tab: Tab) => {\n    setSelected(tab);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>{`Selected tab is ${selectedTab.title}`}</h1>\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTab.id}\n        onSelect={onTabSelected}\n      />\n      <div>\n        {selectedTab.content}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bulma/css/bulma.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}